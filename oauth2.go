package smtpoauth2

import (
	"errors"
	"fmt"
	"net/smtp"
)

type oauth2 struct {
	user, tokenType, token string
}

// Returns an AUTH that implements XOAUTH2 authentication
// user is your email username (normally your email address)
// tokenType is usually going to be "Bearer"
// token is your access_token generated by a tool like quickstart
func Oauth2(user, tokenType, token string) smtp.Auth {
	return &oauth2{user, tokenType, token}
}

func (a *oauth2) Start(server *smtp.ServerInfo) (string, []byte, error) {
	if !server.TLS {
		return "", nil, errors.New("unencrypted connection")
	}
	resp := []byte(fmt.Sprintf("user=%v\001auth=%v %v\001\001", a.user, "Bearer", a.token))
	return "XOAUTH2", resp, nil
}

func (a *oauth2) Next(fromServer []byte, more bool) ([]byte, error) {
	if more {
		// We've already sent everything.
		return nil, fmt.Errorf("unexpected server challenge: %s", fromServer)
	}
	return nil, nil
}
